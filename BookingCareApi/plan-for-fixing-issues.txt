# Plan sửa chữa lỗi trong dự án Beautiful Care

## Lỗi đã phát hiện và đã sửa
1. Lỗi chính: `No property 'suitableForSkinType' found for type 'ServiceEntity'`
   - Đã thêm trường `suitableForSkinType` vào `ServiceEntity`
   - Đã thêm trường tương ứng vào `ServiceResponse`
   - Đã cập nhật các phương thức mapping trong `ServiceMapper`
   - Đã thêm trường vào `ServiceCreateRequest`

## Lỗi tiềm ẩn và kế hoạch sửa chữa

### 1. ServiceEntity
- **Vấn đề**: Trường `suitableForSkinType` không có giá trị mặc định, có thể gây ra lỗi NULL khi truy vấn
- **Giải pháp**: 
  - Xem xét thêm giá trị mặc định cho trường này
  - Kiểm tra SQL schema để đảm bảo tính nhất quán

### 2. ServiceMapper
- **Vấn đề**: Không xử lý trường hợp null cho `service.getCategory()`, `service.getSuitableForSkinType()`
- **Giải pháp**: 
  - Thêm kiểm tra null trong phương thức `toServiceResponse`
  - Xử lý việc chuyển đổi một cách an toàn
  ```java
  .categoryId(service.getCategory() != null ? service.getCategory().getId() : null)
  .categoryName(service.getCategory() != null ? service.getCategory().getName() : null)
  ```

### 3. TreatmentServiceImpl và các mapper khác
- **Vấn đề**: Một số mapper khác có thể vẫn sử dụng `.duration()` thay vì `.durationMinutes()`
- **Giải pháp**:
  - Kiểm tra toàn bộ codebase sử dụng grep tìm `.duration(`
  - Cập nhật tất cả các mapper với tên field đúng

### 4. SpecialistMapper
- **Vấn đề**: Đã sửa từ `.duration()` thành `.durationMinutes()` và cấu trúc category
- **Cần kiểm tra**: Có các mapper khác tương tự cần được cập nhật

### 5. SkinTest và ServiceEntity
- **Vấn đề**: Đã thêm phương thức `findBySuitableForSkinType` nhưng cần xác nhận logic nghiệp vụ 
- **Giải pháp**:
  - Kiểm tra logic xử lý trong `SkinTestServiceImpl` khi tìm kiếm service phù hợp với loại da
  - Đảm bảo các service mới được tạo có thông tin `suitableForSkinType` hợp lệ

### 6. Vấn đề Database Migration
- **Vấn đề**: Thêm trường mới vào entity mà không có migration script
- **Giải pháp**:
  - Tạo migration script SQL để thêm trường mới vào bảng services
  - Cập nhật dữ liệu hiện có với giá trị mặc định hợp lý

### 7. Kiểm tra API
Cần kiểm tra các API sau khi sửa:
- `POST /services` - Tạo service mới với `suitableForSkinType`
- `GET /services` - Đảm bảo response bao gồm `suitableForSkinType`
- `GET /skin-tests/results/{id}/recommendations` - Kiểm tra logic tìm dịch vụ phù hợp với loại da

### 8. Unit Test
- Cập nhật hoặc thêm unit test cho:
  - `ServiceMapper`
  - `ServiceRepository` với phương thức mới
  - `SkinTestServiceImpl` với logic tìm service phù hợp

## Kế hoạch thực hiện:
1. Sửa các lỗi trong mapper để xử lý null
2. Kiểm tra các mapper khác trong hệ thống
3. Tạo migration script
4. Cập nhật hoặc thêm unit test
5. Kiểm tra tích hợp đầy đủ các API

## Lưu ý:
- Không thêm tính năng mới khi đang sửa lỗi
- Luôn kiểm tra kỹ trước khi commit
- Đảm bảo tất cả unit test đều pass trước khi deploy 